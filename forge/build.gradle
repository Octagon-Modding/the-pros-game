import org.apache.tools.ant.filters.ReplaceTokens
import org.eu.awesomekalin.pro.mod.BuildTools

plugins {
    id "net.minecraftforge.gradle" version "+"
    id "org.spongepowered.mixin" version "+"
}

final BuildTools buildTools = new BuildTools(minecraftVersion, "forge", project)

minecraft {
    mappings channel: "official", version: minecraftVersion
    runs {
        configureEach {
            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
        }
        client {}
        server { args "--nogui" }
    }
}

sourceSets.main.resources { srcDir "src/generated/resources" }

dependencies {
    minecraft "net.minecraftforge:forge:${minecraftVersion}-${buildTools.getForgeVersion()}"
    shadowImplementation "org.mtr:Minecraft-Mappings-forge-${minecraftVersion}:0.0.1-dev"
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(buildTools.javaLanguageVersion))
    }
    withSourcesJar()
    withJavadocJar()
}

tasks.register("setupFiles") {
    copy {
        outputs.upToDateWhen { false }
        from "src/main/mods.template.toml"
        into "src/main/resources/META-INF"
        filter(ReplaceTokens, tokens: ["minecraft": minecraftVersion, "version": version])
        rename "(.+).template.toml", "\$1.toml"
    }

    delete fileTree("src/main/java/org/eu/awesomekalin/pro/mod")
    delete fileTree("src/main/resources/assets")
    delete fileTree("src/main/resources/data")

    copy {
        outputs.upToDateWhen { false }
        from "../fabric/src/main/java/org/eu/awesomekalin/pro/mod"
        into "src/main/java/org/eu/awesomekalin/pro/mod"
    }

    copy {
        outputs.upToDateWhen { false }
        from "../fabric/src/main/resources/assets"
        into "src/main/resources/assets"
    }

    copy {
        outputs.upToDateWhen { false }
        from "../fabric/src/main/resources/data"
        into "src/main/resources/data"
    }
}

build {
    doLast {
        buildTools.copyBuildFile(excludeAssets == "true")
    }
}

shadowJar {
    finalizedBy "reobfShadowJar"
    exclude excludeAssets == "true" ? "assets" : "abc123"
}

reobf {
    shadowJar {}
}

assemble.dependsOn shadowJar